from telebot.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
import os

from config import MANAGER_CHAT_ID, TELEGRAM_CATALOG_LINK, TELEGRAM_REVIEWS
from state import add_conversation, set_client_to_forward

def create_main_menu():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üí± –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç", callback_data="conversion"))
    markup.add(InlineKeyboardButton("üõç –ö–∞—Ç–∞–ª–æ–≥", url=TELEGRAM_CATALOG_LINK))
    markup.add(InlineKeyboardButton("üì¶ –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="delivery"))
    markup.add(InlineKeyboardButton("üó£Ô∏è –û—Ç–∑—ã–≤—ã", url=TELEGRAM_REVIEWS))
    markup.add(InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager"))
    return markup

def register_delivery_handlers(bot):
    @bot.callback_query_handler(func=lambda call: call.data == "delivery")
    def show_delivery_handler(call: CallbackQuery):
        show_delivery(call)

    def show_delivery(call: CallbackQuery, show_image=True):
        if show_image:
            base_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'resources'))
            with open(os.path.join(base_path, "photo_2025-04-17 12.54.25.jpeg"), "rb") as photo1:
                bot.send_photo(call.message.chat.id, photo1)

        delivery_menu = InlineKeyboardMarkup()
        delivery_menu.add(InlineKeyboardButton("üá∫üá∏ –°–®–ê", callback_data="delivery_usa"))
        delivery_menu.add(InlineKeyboardButton("üá™üá∫ –ï–≤—Ä–æ–ø–∞", callback_data="delivery_europe"))
        delivery_menu.add(InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_main"))

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω, –æ—Ç–∫—É–¥–∞ –ø–æ—Å—ã–ª–∫–∞:", reply_markup=delivery_menu)

    @bot.callback_query_handler(func=lambda call: call.data == "delivery_europe")
    def show_europe_delivery(call: CallbackQuery):
        base_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'resources'))

        with open(os.path.join(base_path, "photo_2025-04-17 12.53.52.jpeg"), "rb") as photo1, \
             open(os.path.join(base_path, "photo_2025-04-17 12.53.59.jpeg"), "rb") as photo2:
            bot.send_photo(call.message.chat.id, photo1)
            bot.send_photo(call.message.chat.id, photo2,  reply_markup=back_menu)

    back_menu = InlineKeyboardMarkup()
    back_menu.add(InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager"))
    back_menu.add(InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ä–µ–≥–∏–æ–Ω–∞", callback_data="delivery_nophoto"))
    back_menu.add(InlineKeyboardButton("‚¨Ö –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main"))

    @bot.callback_query_handler(func=lambda call: call.data == "delivery_usa")
    def show_usa_delivery(call: CallbackQuery):
        base_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'resources'))

        with open(os.path.join(base_path, "photo_2025-04-17 13.10.22.jpeg"), "rb") as photo1, \
             open(os.path.join(base_path, "photo_2025-04-17 13.10.28.jpeg"), "rb") as photo2, \
             open(os.path.join(base_path, "photo_2025-04-17 13.10.29.jpeg"), "rb") as photo3:
            bot.send_photo(call.message.chat.id, photo1)
            bot.send_photo(call.message.chat.id, photo2)
            bot.send_photo(call.message.chat.id, photo3, reply_markup=back_menu)

    @bot.callback_query_handler(func=lambda call: call.data == "delivery_nophoto")
    def show_delivery_nophoto(call: CallbackQuery):
        show_delivery(call, show_image=False)

    @bot.callback_query_handler(func=lambda call: call.data.startswith("contact_manager_"))
    def handle_contact_manager(call: CallbackQuery):
        client_id = call.from_user.id
        manager_id = MANAGER_CHAT_ID

        region = "–ï–≤—Ä–æ–ø–∞" if call.data == "contact_manager_europe" else "–°–®–ê"
        add_conversation(client_id, manager_id)
        set_client_to_forward(manager_id, client_id)

        bot.send_message(call.message.chat.id, f"–í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

    @bot.callback_query_handler(func=lambda call: call.data == "back_to_main")
    def back_to_main(call: CallbackQuery):
        # Delete the current message to clean up the UI
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # Send main menu
        bot.send_message(call.message.chat.id, "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=create_main_menu())